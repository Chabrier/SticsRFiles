% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_param_info.R
\name{get_param_info}
\alias{get_param_info}
\title{Finding parameters information using partial search words}
\usage{
get_param_info(
  param = NULL,
  file_path = NULL,
  formalism = NULL,
  keyword = NULL,
  version = "latest",
  parameter = lifecycle::deprecated()
)
}
\arguments{
\item{param}{Vector of parameter names (or partial names). Optional, if not
provided, the function returns information for all parameters}

\item{file_path}{Optional, xml file path or a vector of}

\item{formalism}{Optional, formalism name or partial name, or a vector of}

\item{keyword}{Optional, strings or a vector of to be used for searching
in parameters data (i.e.: parameters names, formalisms description,
file names or part to which parameters are attached to)}

\item{version}{Optional, Stics version (default value, "latest")
Only the 2 latest are referenced: V9.0, V9.1}

\item{parameter}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} \code{parameter} is no
longer supported, use \code{param} instead.}
}
\value{
A data.frame containing parameters names,
their file name origin, their bounds and the formalism they belong to. The
data.frame has the model version as attribute.
}
\description{
Finding parameters information using partial search words
}
\details{
parameter and formalism may be both set or only one of them, but
none of them can be if keyword argument is used.
}
\examples{

get_param_info(param = "albedo")

\dontrun{
get_param_info(param = "albedo", file_path ="/path/to/file.xml")

get_param_info(param = "albedo", formalism = "special")

get_param_info(param = "albedo", version = "V9.0")

get_param_info(param = c("alb", "lat"))

get_param_info( keyword = "tec" )

# Get the model version afterward:
params = get_param_info(param = "albedo")
attr(params, "version")
}



}

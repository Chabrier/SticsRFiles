% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upgrade_tec_xml.R
\name{upgrade_tec_xml}
\alias{upgrade_tec_xml}
\title{Upgrading _tec.xml file(s) to a newer version}
\usage{
upgrade_tec_xml(
  file,
  param_newform_file,
  out_dir,
  stics_version = "9.2",
  target_version = "10.0",
  check_version = TRUE,
  param_gen_file = NULL,
  overwrite = FALSE,
  ...
)
}
\arguments{
\item{file}{Path of a crop management (*_tec.xml) file or a vector of}

\item{param_newform_file}{Path of the param_newform.xml file corresponding
to the file version}

\item{out_dir}{Output directory path of the generated files}

\item{stics_version}{Name of the Stics version (VX.Y format)}

\item{target_version}{Name of the Stics version to upgrade files to (VX.Y format)}

\item{check_version}{Perform version consistency with in stics_version input
with the file version and finally checking if the upgrade is possible
allowed to the target_version. If TRUE, param_gen_file is mandatory.}

\item{param_gen_file}{Path of the param_gen.xml file corresponding
to the file version}

\item{overwrite}{logical (optional),
TRUE for overwriting file if it exists, FALSE otherwise}

\item{...}{Additional input arguments}
}
\description{
Upgrading _tec.xml file(s) to a newer version
}
\details{
See SticsRFiles::get_stics_versions_compat() for listing versions
}
\examples{
\dontrun{
upgrade_tec_xml(file = "/path/to/_tec.xml",
                param_newform_file = "/path/to/param_newform.xml"
                out_dir = "/path/to/directory")
}
}

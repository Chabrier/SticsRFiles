% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_sols_param_xml.R
\name{set_sols_param_xml}
\alias{set_sols_param_xml}
\title{Setting soil parameter(s) value(s) in a sols xml_document}
\usage{
set_sols_param_xml(xml_doc_object, sols_param, overwrite = FALSE)
}
\arguments{
\item{xml_doc_object}{an xml_document object (created from an xml sols file)}

\item{sols_param}{soils parameters (data.frame)}

\item{overwrite}{replace existing soil (TRUE) or not,
updating existing ones (FALSE)}
}
\description{
Setting soil parameter(s) value(s) in a sols xml_document
}
\examples{
\dontrun{
xml_path <- file.path(get_examples_path(file_type = "xml"), "sols.xml")
sols_doc <- SticsRFiles:::xmldocument(xml_path)

xl_path <- file.path(get_examples_path(file_type = "xl"),
                    "inputs_stics_example.xlsx")
sols_df <- read_excel(xl_path, sheet = "Soils")

# For updating an existing xml doc (using existing soils names)
# Creating a fake existing_doc
existing_doc <- SticsRFiles:::gen_usms_sols_doc("sols", nodes_nb = 3)
SticsRFiles:::set_param_value(existing_doc,
  param_name = "sol",
  param_value = sols_df$Soil_name[c(3, 1, 5)]
)

SticsRFiles:::set_sols_param_xml(existing_doc, sols_df)


# For a new xml doc
# In that case: sols_df must contain all the soils parameters !)
soils_nb <- dim(sols_df)[1]
new_doc <- SticsRFiles:::gen_usms_sols_doc("sols", nodes_nb = soils_nb)

SticsRFiles:::set_sols_param_xml(new_doc, sols_df, overwrite = TRUE)
}

}
\keyword{internal}
